version: '2.1'
services:
  logstash-australian-addresses:
    build: ./my-logstash-australian-addresses
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      HEAP_SIZE: 500m
    networks:
      - esnet

  logstash-cities:
    build: ./my-logstash-cities
    container_name: logstash-cities-api
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      HEAP_SIZE: 300m
    networks:
      - esnet

  logstash-countries:
    build: ./my-logstash-countries
    container_name: logstash-countries-api
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      HEAP_SIZE: 300m
    networks:
      - esnet

  python-app:
    restart: always
    build: ./python-app
    mem_limit: 2000m  
    command: gunicorn --workers=1 -b :8080 python-app:app 
    networks:
      - esnet
    depends_on: 
      - elasticsearch


  elasticsearch:
    build: ./my-elasticsearch
#    container_name: elasticsearch - if you name containers you can't scale them
    mem_limit: 2200m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    networks:
      - esnet
 
  kibana:
    build: ./my-kibana
    mem_limit: 500m
    networks:
      - esnet
    restart: always
    depends_on: 
      - nginx

  nginx:
    restart: always
    build: ./my-nginx
    mem_limit: 200m 
    ports:
      - 443:443      
    volumes:
      - nginxdata:/var/log/nginx/
#      - ./security/certificate.crt:/etc/nginx/ssl/certificate.crt
#      - ./security/certificate.key:/etc/nginx/ssl/certificate.key
#      - ./security/app.htpasswd:/etc/nginx/conf.d/app.htpasswd
#      - ./security/kibana.htpasswd:/etc/nginx/conf.d/kibana.htpasswd
    networks:
      - esnet
    depends_on: 
      - elasticsearch

  filebeat:
    build: ./my-filebeat
    command: ./filebeat -e --modules=nginx --setup 
    mem_limit: 100m
    volumes:
      - nginxdata:/var/log/nginx/
      - fbdata:/usr/share/filebeat/data/
    networks:
      - esnet
    restart: on-failure
    depends_on: 
      - kibana
      - elasticsearch
volumes:
  esdata1:
    driver: local
  fbdata:
    driver: local    
  nginxdata:
    driver: local  

networks:
  esnet:
