##
##  https://github.com/robbert229/docker-elk-nginx
###
version: '2.1'
services:
  elasticsearch1:
    build: ./my-elasticsearch
    container_name: elasticsearch1
    ports:
      - 9200:9200
    mem_limit: 1100m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "http://localhost:9200/_cat/health"]
    networks:
      - esnet

  kibana1:
    image: docker.elastic.co/kibana/kibana-oss:6.2.3
    container_name: kibana1
    environment:
      SERVER_NAME: swarmee
      #      vega.enableExternalUrls: true
      VEGA_ENABLEEXTERNALURLS: "true" 
      ELASTICSEARCH_URL: http://elasticsearch1:9200
      #      KIBANA_DEFAULTAPPID: "dashboard/4c1cb360-2a5b-11e8-bfcf-fd22dc5fb3d6"
    mem_limit: 800m
    ports:
      - 5601:5601
    networks:
      - esnet
    restart: always
    depends_on:
      elasticsearch1:  { condition: service_healthy }

  productsearch-api:
    container_name: productsearch-api1
    restart: always
    build: ./productsearch-api
    mem_limit: 500m  
    command: gunicorn --workers=2 -b :8080 productsearch-api:app 
    networks:
      - esnet
    depends_on:
      elasticsearch1:  { condition: service_healthy }

  nginx1:
    image: nginx:stable-alpine
    container_name: nginx1
    mem_limit: 500m 
    ports:
      - 80:80
      - 444:444
    volumes:
      - ./nginx:/var/log/nginx/
      - ./certificate.crt:/etc/nginx/ssl/certificate.crt
      - ./certificate.key:/etc/nginx/ssl/certificate.key
      - ./app.htpasswd:/etc/nginx/conf.d/app.htpasswd
      - ./kibana.htpasswd:/etc/nginx/conf.d/kibana.htpasswd
      - ./default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - esnet
    depends_on:
      elasticsearch1:  { condition: service_healthy }

  filebeat1:
    build: ./my-filebeat
    container_name: filebeat1
    command: ./filebeat -e --modules nginx 
    mem_limit: 500m
    volumes:
      - ./nginx:/var/log/nginx/
      - fbdata:/usr/share/filebeat/data/
    networks:
      - esnet
    restart: on-failure
    depends_on:
      elasticsearch1:  { condition: service_healthy }

  #Configure Stack container. This short lived container configures the stack once Kibana and Elasticsearch are available. More specifically, using a script it sets passwords, import dashboards, sets a default index pattern, loads templates and pipelines
  configure_stack:
    container_name: configure_stack
    image: docker.elastic.co/beats/filebeat:6.2.3
    volumes: ['./configure-stack.sh:/usr/local/bin/configure-stack.sh:ro']
    command: ['/bin/bash', '-c', 'cat /usr/local/bin/configure-stack.sh | tr -d "\r" | bash']
    networks: ['esnet']
    depends_on: ['elasticsearch1','kibana1']

volumes:
  esdata1:
    driver: local
  fbdata:
    driver: local

networks:
  esnet:
