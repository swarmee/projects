input {
    file {        path => "/tmp/*.txt"       
                  start_position => beginning
                  sincedb_path => "/dev/null"
                  ignore_older => 0
         }
}

filter {
  csv {
     skip_empty_columns => true
     separator => ","
     columns => [
                 "geonameId"                 
                 ,"name"
                 ,"asciiName"
                 ,"alternateNames"
                 ,"latitude"
                 ,"longitude"
                 ,"featureClass"
                 ,"featureCode"
                 ,"countryCode"
                 ,"altCountryCode"
                 ,"admin1Code"
                 ,"admin2Code"
                 ,"admin3Code"
                 ,"admin4Code"
                 ,"population" 
                 ,"elevation"
                 ,"digitalElevationModel"
                 ,"timezone"
                 ,"modificationDate"
] 
  }

  date { 
    match => [ "modificationDate", "yyyy-MM-dd" ] 
    target => "modificationDate" 
       }	    

  mutate {
    remove_field => [ "message", "host", "@version", "path", "@timestamp" ]
    convert => { "latitude"  => "float" }
    convert => { "longitude" => "float" }
    rename =>  { "longitude" => "[location][lon]"}
    rename =>  { "latitude"  => "[location][lat]"}
          }

  mutate {
    split => { "alternateNames" => "," }
        }
####################################################################################################
##  Original configuration merging asciiName and alternateNames -- however resulted in funny results. 
##  Search for Syd returned SYD as its an alias for Sydney. 
##
##       if ![alternateNames]
##       {
##       mutate 
##       {
##       add_field => { "alternateNames" => "%{asciiName}" }
##       }
##       }
##
##       mutate 
##       {
##       copy => { "[completion-suggestion]input" => "alternateNames" }
##       }
##
##       mutate 
##       {
##       add_field => { "[completion-suggestion]input" => "%{alternateNames}" }
##       }
##
##       mutate 
##       {
##       split => { "[completion-suggestion]input" => "," }
##       }
##
##       mutate 
##       {
##       merge => { "[completion-suggestion]input" => "asciiName" }
##       }
##
##       mutate 
##       {
##       add_field => { "[completion-suggestion]weight" => "%{population}" }
##       }
##
####################################################################################################
##  New Configuration has suggestion performed seperately for asciiName and alternateNames



       mutate 
       {
       add_field => { "[alternateNames-suggestion]input" => "%{alternateNames}" }
       }
       mutate 
       {
       split =>     { "[alternateNames-suggestion]input" => "," }
       add_field => { "[alternateNames-suggestion]weight" => "%{population}" }
       }

       mutate 
       {
       add_field => { "[asciiName-suggestion]input" => "%{asciiName}" }
       add_field => { "[asciiName-suggestion]weight" => "%{population}" }
       }

}

output {

stdout { codec => rubydebug }
##     stdout { codec => dots }

  elasticsearch {
    index => "city"
    hosts => ["elasticsearch1:9200"]
    document_type => "city"
    retry_on_conflict => 9
    action => "update"
    document_id => "%{geonameId}"
    doc_as_upsert => true
    template      => "/tmp/geonames.json"
    template_name => "city"
    template_overwrite => true
##    sniffing => true
##    sniffing_delay => 999
}
}
